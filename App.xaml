<Application x:Class="BarberSystem.App"
			 StartupUri="MainWindow.xaml"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:BarberSystem" ShutdownMode="OnLastWindowClose">
	<Application.Resources>
		<Style x:Key="MyButton" TargetType="Button">
			<Setter Property="OverridesDefaultStyle" Value="True" />
			<Setter Property="Cursor" Value="Hand" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="Button">
						<Border Name="border" BorderThickness="1" BorderBrush="Black" Padding="75,1,1,1" Background="{TemplateBinding Background}">
							<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter Property="Opacity" Value="0.8" />
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="ButtonNavigator" TargetType="Button">
			<Setter Property="OverridesDefaultStyle" Value="True" />
			<Setter Property="Cursor" Value="Hand" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="Button">
						<Border Name="border" BorderThickness="1" BorderBrush="#FFFDFBFB" Padding="0,0,0,0" Background="{TemplateBinding Background}">
							<ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Top" />
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter Property="Opacity" Value="0.8" />
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="ButtonMenu" TargetType="Button">
			<Setter Property="OverridesDefaultStyle" Value="True" />
			<Setter Property="Cursor" Value="Hand" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="Button">
						<Border Name="border" BorderThickness="1" BorderBrush="{x:Null}" Padding="0,0,0,0" Background="{TemplateBinding Background}">
							<ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Top" />
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter Property="Opacity" Value="0.8" />
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="MyButtonPesquisar" TargetType="Button">
			<Setter Property="OverridesDefaultStyle" Value="True" />
			<Setter Property="Cursor" Value="Hand" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="Button">
						<Border Name="border" BorderThickness="1" BorderBrush="Black" Padding="20,1,1,1" Background="{TemplateBinding Background}">
							<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter Property="Opacity" Value="0.8" />
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="MyButtonMenu" TargetType="Button">
			<Setter Property="OverridesDefaultStyle" Value="True" />
			<Setter Property="Cursor" Value="Hand" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="Button">
						<Border Name="border" BorderThickness="0" BorderBrush="Black" Background="{TemplateBinding Background}">
							<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Bottom" />
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter Property="Opacity" Value="0.8" />
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="MyButtonCalc1" TargetType="Button">
			<Setter Property="OverridesDefaultStyle" Value="True" />
			<Setter Property="Cursor" Value="Hand" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="Button">
						<Border Name="border" BorderThickness="1" BorderBrush="White" Background="{TemplateBinding Background}">
							<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Bottom" />
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter Property="Opacity" Value="0.8" />
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="MyButtonEntrada" TargetType="Button">
			<Setter Property="OverridesDefaultStyle" Value="True" />
			<Setter Property="Cursor" Value="Hand" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="Button">
						<Border Name="border" BorderThickness="2" BorderBrush="Green" Padding="50,1,1,5" Background="{TemplateBinding Background}">
							<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Bottom" />
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter Property="Opacity" Value="0.8" />
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="MyButtonSaida" TargetType="Button">
			<Setter Property="OverridesDefaultStyle" Value="True" />
			<Setter Property="Cursor" Value="Hand" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="Button">
						<Border Name="border" BorderThickness="2" BorderBrush="Red" Padding="50,1,1,5" Background="{TemplateBinding Background}">
							<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Bottom" />
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter Property="Opacity" Value="0.8" />
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="CalendarDayButtonStyle" TargetType="{x:Type CalendarDayButton}">
			<!--<Setter Property="Background" Value="#FFBADDE9" />-->

			<Setter Property="FontSize" Value="20" /> 
			<Setter Property="HorizontalContentAlignment" Value="Center" />
			<Setter Property="VerticalContentAlignment" Value="Center" />
			<Setter Property="MinWidth" Value="35" />
			<Setter Property="MinHeight" Value="35" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="CalendarDayButton">
						<Grid>
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualStateGroup.Transitions>
										<VisualTransition GeneratedDuration="0:0:0.1" />
									</VisualStateGroup.Transitions>
									<VisualState x:Name="Normal" />
									<VisualState x:Name="MouseOver">
										<Storyboard>
											<DoubleAnimation Storyboard.TargetName="Background" Storyboard.TargetProperty="Opacity" To=".5" Duration="0" />
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Pressed">
										<Storyboard>
											<DoubleAnimation Storyboard.TargetName="Background" Storyboard.TargetProperty="Opacity" To=".5" Duration="0" />
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Disabled">
										<Storyboard>
											<DoubleAnimation Storyboard.TargetName="Background" Storyboard.TargetProperty="Opacity" To="0" Duration="0" />
											<DoubleAnimation Storyboard.TargetName="Content" Storyboard.TargetProperty="Opacity" To=".35" Duration="0" />
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
								<VisualStateGroup x:Name="SelectionStates">
									<VisualStateGroup.Transitions>
										<VisualTransition GeneratedDuration="0" />
									</VisualStateGroup.Transitions>
									<VisualState x:Name="Unselected" />
									<VisualState x:Name="Selected">
										<Storyboard>
											<DoubleAnimation Storyboard.TargetName="SelectedBackground" Storyboard.TargetProperty="Opacity" To=".75" Duration="0" />
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
								<VisualStateGroup x:Name="CalendarButtonFocusStates">
									<VisualStateGroup.Transitions>
										<VisualTransition GeneratedDuration="0" />
									</VisualStateGroup.Transitions>
									<VisualState x:Name="CalendarButtonFocused">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusVisual" Storyboard.TargetProperty="Visibility" Duration="0">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="CalendarButtonUnfocused">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusVisual" Storyboard.TargetProperty="Visibility" Duration="0">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}" />
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
								<VisualStateGroup x:Name="ActiveStates">
									<VisualStateGroup.Transitions>
										<VisualTransition GeneratedDuration="0" />
									</VisualStateGroup.Transitions>
									<VisualState x:Name="Active" />
									<VisualState x:Name="Inactive">
										<Storyboard>
											<ColorAnimation Storyboard.TargetName="Content" Storyboard.TargetProperty="(ContentControl.Foreground).(GradientBrush.GradientStops)[2].(GradientStop.Color)" To="{DynamicResource DisableDay1}" Duration="0" />
											<ColorAnimation Storyboard.TargetName="Content" Storyboard.TargetProperty="(ContentControl.Foreground).(GradientBrush.GradientStops)[3].(GradientStop.Color)" To="{DynamicResource DisableDay2}" Duration="0" />
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
								<VisualStateGroup x:Name="DayStates">
									<VisualStateGroup.Transitions>
										<VisualTransition GeneratedDuration="0" />
									</VisualStateGroup.Transitions>
									<VisualState x:Name="RegularDay"  />
									<VisualState x:Name="Today">
										<Storyboard>
											<DoubleAnimation Storyboard.TargetName="TodayBackground" Storyboard.TargetProperty="Opacity" To="1" Duration="0" />
											<DoubleAnimation Storyboard.TargetName="Content" Storyboard.TargetProperty="(ContentControl.Foreground).(GradientBrush.GradientStops)[1].(GradientStop.Offset)" To="1" Duration="0" />
											<DoubleAnimation Storyboard.TargetName="Content" Storyboard.TargetProperty="(ContentControl.Foreground).(GradientBrush.GradientStops)[2].(GradientStop.Offset)" To="1" Duration="0" />
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
								<VisualStateGroup x:Name="BlackoutDayStates">
									<VisualStateGroup.Transitions>
										<VisualTransition GeneratedDuration="0" />
									</VisualStateGroup.Transitions>
									<VisualState x:Name="NormalDay" />
									<VisualState x:Name="BlackoutDay">
										<Storyboard>
											<DoubleAnimation Storyboard.TargetName="BlackoutVisual" Storyboard.TargetProperty="Opacity" To=".2" Duration="0" />
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>

							<Rectangle x:Name="TodayBackground" RadiusX="1" RadiusY="1" Opacity="0" Fill="#FFAAAAAA" />
							<Rectangle x:Name="SelectedBackground" RadiusX="1" RadiusY="1" Opacity="0" Fill="{TemplateBinding Background}" />
							<Rectangle x:Name="Background" RadiusX="1" RadiusY="1" Opacity="0" Fill="{TemplateBinding Background}" />

							<ContentControl x:Name="Content" IsTabStop="False" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" FontSize="{TemplateBinding FontSize}" Margin="5,1,5,1">
								<ContentControl.Foreground>
									<LinearGradientBrush>
										<GradientStop Offset="0" Color="{DynamicResource SelectedDay1}" />
										<GradientStop Offset="0" Color="{DynamicResource SelectedDay2}" />
										<GradientStop Offset="0" Color="{DynamicResource NormalDay1}" />
										<GradientStop Offset="1" Color="{DynamicResource NormalDay2}" />
									</LinearGradientBrush>
								</ContentControl.Foreground>
							</ContentControl>

							<Path x:Name="BlackoutVisual" Opacity="0" Margin="3" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" RenderTransformOrigin="0.5,0.5" Fill="#FF000000" Stretch="Fill" Data="M8.1772461,11.029181 L10.433105,11.029181 L11.700684,12.801641 L12.973633,11.029181 L15.191895,11.029181 L12.844727,13.999395 L15.21875,17.060919 L12.962891,17.060919 L11.673828,15.256231 L10.352539,17.060919 L8.1396484,17.060919 L10.519043,14.042364 z" />
							<Rectangle x:Name="FocusVisual" Visibility="Collapsed" IsHitTestVisible="false" RadiusX="1" RadiusY="1" Stroke="#FF6DBDD1" />
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Color x:Key="DisableDay1">Black</Color>
		<Color x:Key="DisableDay2">Black</Color>

		<Color x:Key="NormalDay1">Gray</Color>
		<Color x:Key="NormalDay2">Gray</Color>

		<Color x:Key="SelectedDay1">Red</Color>
		<Color x:Key="SelectedDay2">Red</Color>
		<Style x:Key="TouchCalendarStyle" TargetType="{x:Type Calendar}">
			<Setter Property="CalendarDayButtonStyle" Value="{DynamicResource CalendarDayButtonStyle}"/>
		</Style>

		<Style TargetType="Calendar"
           x:Key="DateTimeCalendar">
			<Setter Property="Background" Value="#FF191919"/>
			<Setter Property="BorderBrush" Value="#FF191919"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="Foreground" Value="Gray"/>
		</Style>
	</Application.Resources>
</Application>
